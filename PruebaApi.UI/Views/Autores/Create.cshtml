@model PruebaApi.DTO.AutoresDTO

@{
    ViewBag.Title = "Create";
}

<style>
    .form-group {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .createAuthorSection {
        display: flex;
        justify-content: center;
    }

    .labelControl {
        text-align: justify !important;
    }
</style>

<h2 class="text-center">Autores</h2>
<hr />
@ViewBag.Error
<div class="row createAuthorSection">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Registra la información de un Autor</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.IdAutor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IdAutor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IdAutor, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.NombreCompleto, "Nombre Completo", htmlAttributes: new { @class = "control-label col-md-10 labelControl" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaNacimiento, "Fecha de Nacimiento", htmlAttributes: new { @class = "control-label col-md-10 labelControl", @required = "required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", @id = "fechaNacimientoInput", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CiudadProcedencia, "Ciudad de Procedencia", htmlAttributes: new { @class = "control-label col-md-10 labelControl", @required = "required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CiudadProcedencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CiudadProcedencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-10 labelControl" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10" style="display: flex; justify-content: space-around;">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <button class="btn" onclick="cancelarRegistro()">Cancelar</button>
                </div>
            </div>
        </div>
    }
</div>



@section scripts{
    <script>
        function cancelarRegistro() {
            window.location.href = '@Url.Action("Index", "Autores")';
        }
    </script>
    
}

